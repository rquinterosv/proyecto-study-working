{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documents/Documentos/sw-experience/src/components/Service1.js\";\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport img1 from '../img/Hero.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Service1 = ({\n  selectedCountry\n}) => {\n  const services = [{\n    title: 'Card Title 1'\n  }, {\n    title: 'Card Title 2'\n  }, {\n    title: 'Card Title 3'\n  }, {\n    title: 'Card Title 4'\n  }];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"custom-container-service\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        className: \"order-lg-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: selectedCountry === 'Canada' && services.map((service, index) => /*#__PURE__*/_jsxDEV(Col, {\n              lg: 6,\n              md: 12,\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                style: {\n                  width: '18rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                  variant: \"top\",\n                  src: img1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 23,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: service.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 25,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 26,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    children: \"Go somewhere\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 30,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 24,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = Service1;\nexport default Service1;\nvar _c;\n$RefreshReg$(_c, \"Service1\");","map":{"version":3,"names":["Container","Row","Col","Card","Button","img1","jsxDEV","_jsxDEV","Service1","selectedCountry","services","title","fluid","className","children","lg","map","service","index","md","style","width","Img","variant","src","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","Text","_c","$RefreshReg$"],"sources":["/home/rafael/Documents/Documentos/sw-experience/src/components/Service1.js"],"sourcesContent":["import { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport img1 from '../img/Hero.png';\n\nconst Service1 = ({ selectedCountry }) => {\n  const services = [\n    { title: 'Card Title 1' },\n    { title: 'Card Title 2' },\n    { title: 'Card Title 3' },\n    { title: 'Card Title 4' },\n  ];\n\n  return (\n    <Container fluid className=\"custom-container-service\">\n      <Row className=\"align-items-center\">\n        {/* Contenido en la derecha */}\n        <Col lg={6} className=\"order-lg-2\">\n          <div className=\"container\">\n            <div className=\"row\">\n              {selectedCountry === 'Canada' &&\n                services.map((service, index) => (\n                  <Col key={index} lg={6} md={12} className=\"mb-3\">\n                    <Card style={{ width: '18rem' }}>\n                      <Card.Img variant=\"top\" src={img1} />\n                      <Card.Body>\n                        <Card.Title>{service.title}</Card.Title>\n                        <Card.Text>\n                          Some quick example text to build on the card title and make up the\n                          bulk of the card's content.\n                        </Card.Text>\n                        <Button variant=\"primary\">Go somewhere</Button>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                ))\n              }\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Service1;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}