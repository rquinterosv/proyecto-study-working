{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documents/Documentos/sw-experience/trasmundo-front/src/pages/Contact.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from '../css/contact.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    nombre: '',\n    apellido: '',\n    correo: '',\n    nacionalidad: '',\n    opciones: '',\n    secciones: ''\n  });\n  const [countries, setCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isChecked, setIsChecked] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(false);\n  const handleCheckboxChange = () => {\n    setIsChecked(!isChecked);\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3001/api/contact', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        console.log('Formulario enviado correctamente');\n      } else {\n        console.error('Error al enviar el formulario');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleInputChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  useEffect(() => {\n    const fetchCountries = async () => {\n      try {\n        const response = await fetch('https://restcountries.com/v3.1/all');\n        if (!response.ok) {\n          throw new Error('Failed to fetch countries');\n        }\n        const data = await response.json();\n        const countriesList = data.map(country => country.name.common);\n        setCountries(countriesList);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching countries:', error);\n      }\n    };\n    fetchCountries();\n  }, []);\n  const countryOptions = countries.map((country, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: country,\n    children: country\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this));\n  useEffect(() => {\n    setIsFormValid(isChecked);\n  }, [isChecked]);\n  return (\n    /*#__PURE__*/\n    //     <div className={styles.container}>\n    //       <div className=\"row\">\n    //       <div className=\"col-md-6 p-2\">\n    //           {/* Información de contacto y formulario */}\n    //           <div className={styles['contact-form']}>\n    //             <h2>Formulario de Contacto</h2>\n    //             <form>\n    //               <div className=\"form-group\">\n    //                 <label htmlFor=\"nombre\">Nombre:</label>\n    //                 <input type=\"text\" id=\"nombre\" name=\"nombre\" className=\"form-control\" />\n    //               </div>\n    //               <div className=\"form-group\">\n    //                 <label htmlFor=\"apellido\">Apellido:</label>\n    //                 <input type=\"text\" id=\"apellido\" name=\"apellido\" className=\"form-control\" />\n    //               </div>\n    //               <div className=\"form-group\">\n    //                 <label htmlFor=\"correo\">Correo:</label>\n    //                 <input type=\"email\" id=\"correo\" name=\"correo\" className=\"form-control\" />\n    //               </div>\n    //               <div className=\"form-group\">\n    //                 <label htmlFor=\"nacionalidad\">Nacionalidad:</label>\n    //                 {isLoading ? (\n    //                   <p>Cargando países...</p>\n    //                 ) : (\n    //                   <select id=\"nacionalidad\" name=\"nacionalidad\" className=\"form-control\">\n    //                     <option value=\"\">Selecciona un país</option>\n    //                     {countryOptions}\n    //                   </select>\n    //                 )}\n    //               </div>\n    //               <div className=\"form-group\">\n    //                 <label htmlFor=\"opciones\">Opciones (Elige una):</label>\n    //                 <select id=\"opciones\" name=\"opciones\" className=\"form-control\">\n    //                   <option value=\"opcion1\">Opción 1</option>\n    //                   <option value=\"opcion2\">Opción 2</option>\n    //                   <option value=\"opcion3\">Opción 3</option>\n    //                   <option value=\"opcion4\">Opción 4</option>\n    //                 </select>\n    //               </div>\n    //               <div className=\"form-group\">\n    //                 <label htmlFor=\"secciones\">Secciones (Elige una):</label>\n    //                 <select id=\"secciones\" name=\"secciones\" className=\"form-control\">\n    //                   <option value=\"seccion1\">Sección 1</option>\n    //                   <option value=\"seccion2\">Sección 2</option>\n    //                   <option value=\"seccion3\">Sección 3</option>\n    //                   <option value=\"seccion4\">Sección 4</option>\n    //                 </select>\n    //               </div>\n    //               <div className=\"form-check mt-3\">\n    //                 <input\n    //                   type=\"checkbox\"\n    //                   id=\"terminos\"\n    //                   name=\"terminos\"\n    //                   className=\"form-check-input\"\n    //                   checked={isChecked}\n    //                   onChange={handleCheckboxChange}\n    //                 />\n    //                 <label htmlFor=\"terminos\" className=\"form-check-label\">\n    //                   Acepto los términos y condiciones\n    //                 </label>\n    //               </div>\n    //               <button type=\"submit\" className=\"btn btn-primary mt-2\" disabled={!isFormValid}>Enviar</button>\n    //             </form>\n    //           </div>\n    //         </div>\n    //         <div className=\"col-md-6 p-2\">\n    //           {/* Información del profesional */}\n    //           <div className={styles['contact-info']}>\n    //             <h2>Información de Contacto</h2>\n    //             <p>Dirección: [Dirección]</p>\n    //             <p>Teléfono: [Teléfono]</p>\n    //             <p>Email: [Email]</p>\n    //             {/* Puedes agregar más información de contacto según sea necesario */}\n    //           </div>\n    //           <div className={`${styles['professional-profile']} text-center`}>\n    //             <img\n    //               src=\"URL_DE_LA_IMAGEN\"\n    //               alt=\"Foto del profesional\"\n    //               className=\"profile-picture rounded-circle img-fluid\"\n    //             />\n    //             <h3>Nombre Apellido</h3>\n    //             <p>Cargo</p>\n    //             <p>Descripción breve del profesional.</p>\n    //           </div>\n    //         </div>\n    //       </div>\n    //     </div>\n    //   );\n    // };\n    // Formulario 2\n    _jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"nombre\",\n          onChange: handleInputChange,\n          value: formData.nombre,\n          placeholder: \"Nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"apellido\",\n          onChange: handleInputChange,\n          value: formData.apellido,\n          placeholder: \"Apellido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"terminos\",\n            name: \"terminos\",\n            className: \"form-check-input\",\n            checked: isChecked,\n            onChange: handleCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"terminos\",\n            className: \"form-check-label\",\n            children: \"Acepto los t\\xE9rminos y condiciones\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !isFormValid,\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 1\n    }, this)\n  );\n};\n_s(Contact, \"7XG7bkCVMO0CQGk5ym1XDGYGvUY=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","useEffect","styles","jsxDEV","_jsxDEV","Contact","_s","formData","setFormData","nombre","apellido","correo","nacionalidad","opciones","secciones","countries","setCountries","isLoading","setIsLoading","isChecked","setIsChecked","isFormValid","setIsFormValid","handleCheckboxChange","handleFormSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","console","log","error","handleInputChange","target","name","value","fetchCountries","Error","data","json","countriesList","map","country","common","countryOptions","index","children","fileName","_jsxFileName","lineNumber","columnNumber","className","container","onSubmit","type","onChange","placeholder","id","checked","htmlFor","disabled","_c","$RefreshReg$"],"sources":["/home/rafael/Documents/Documentos/sw-experience/trasmundo-front/src/pages/Contact.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from '../css/contact.module.css'; \n\nconst Contact = () => {\n\n  const [formData, setFormData] = useState({\n    nombre: '',\n    apellido: '',\n    correo: '',\n    nacionalidad: '',\n    opciones: '',\n    secciones: '',\n  });\n\n  const [countries, setCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isChecked, setIsChecked] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(false);\n\n  const handleCheckboxChange = () => {\n    setIsChecked(!isChecked);\n  };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch('http://localhost:3001/api/contact', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (response.ok) {\n        console.log('Formulario enviado correctamente');\n      } else {\n        console.error('Error al enviar el formulario');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  useEffect(() => {\n    const fetchCountries = async () => {\n      try {\n        const response = await fetch('https://restcountries.com/v3.1/all');\n        if (!response.ok) {\n          throw new Error('Failed to fetch countries');\n        }\n        const data = await response.json();\n        const countriesList = data.map((country) => country.name.common);\n        setCountries(countriesList);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching countries:', error);\n      }\n    };\n\n    fetchCountries();\n  }, []);\n\n  const countryOptions = countries.map((country, index) => (\n    <option key={index} value={country}>\n      {country}\n    </option>\n  ));\n\n  useEffect(() => {\n    setIsFormValid(isChecked);\n  }, [isChecked]);\n\n\n  return (\n//     <div className={styles.container}>\n//       <div className=\"row\">\n//       <div className=\"col-md-6 p-2\">\n//           {/* Información de contacto y formulario */}\n//           <div className={styles['contact-form']}>\n//             <h2>Formulario de Contacto</h2>\n//             <form>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"nombre\">Nombre:</label>\n//                 <input type=\"text\" id=\"nombre\" name=\"nombre\" className=\"form-control\" />\n//               </div>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"apellido\">Apellido:</label>\n//                 <input type=\"text\" id=\"apellido\" name=\"apellido\" className=\"form-control\" />\n//               </div>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"correo\">Correo:</label>\n//                 <input type=\"email\" id=\"correo\" name=\"correo\" className=\"form-control\" />\n//               </div>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"nacionalidad\">Nacionalidad:</label>\n//                 {isLoading ? (\n//                   <p>Cargando países...</p>\n//                 ) : (\n//                   <select id=\"nacionalidad\" name=\"nacionalidad\" className=\"form-control\">\n//                     <option value=\"\">Selecciona un país</option>\n//                     {countryOptions}\n//                   </select>\n//                 )}\n//               </div>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"opciones\">Opciones (Elige una):</label>\n//                 <select id=\"opciones\" name=\"opciones\" className=\"form-control\">\n//                   <option value=\"opcion1\">Opción 1</option>\n//                   <option value=\"opcion2\">Opción 2</option>\n//                   <option value=\"opcion3\">Opción 3</option>\n//                   <option value=\"opcion4\">Opción 4</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"secciones\">Secciones (Elige una):</label>\n//                 <select id=\"secciones\" name=\"secciones\" className=\"form-control\">\n//                   <option value=\"seccion1\">Sección 1</option>\n//                   <option value=\"seccion2\">Sección 2</option>\n//                   <option value=\"seccion3\">Sección 3</option>\n//                   <option value=\"seccion4\">Sección 4</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-check mt-3\">\n//                 <input\n//                   type=\"checkbox\"\n//                   id=\"terminos\"\n//                   name=\"terminos\"\n//                   className=\"form-check-input\"\n//                   checked={isChecked}\n//                   onChange={handleCheckboxChange}\n//                 />\n//                 <label htmlFor=\"terminos\" className=\"form-check-label\">\n//                   Acepto los términos y condiciones\n//                 </label>\n//               </div>\n//               <button type=\"submit\" className=\"btn btn-primary mt-2\" disabled={!isFormValid}>Enviar</button>\n//             </form>\n//           </div>\n//         </div>\n//         <div className=\"col-md-6 p-2\">\n//           {/* Información del profesional */}\n//           <div className={styles['contact-info']}>\n//             <h2>Información de Contacto</h2>\n//             <p>Dirección: [Dirección]</p>\n//             <p>Teléfono: [Teléfono]</p>\n//             <p>Email: [Email]</p>\n//             {/* Puedes agregar más información de contacto según sea necesario */}\n//           </div>\n//           <div className={`${styles['professional-profile']} text-center`}>\n//             <img\n//               src=\"URL_DE_LA_IMAGEN\"\n//               alt=\"Foto del profesional\"\n//               className=\"profile-picture rounded-circle img-fluid\"\n//             />\n//             <h3>Nombre Apellido</h3>\n//             <p>Cargo</p>\n//             <p>Descripción breve del profesional.</p>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n\n// Formulario 2\n\n<div className={styles.container}>\n      <form onSubmit={handleFormSubmit}>\n        <input type=\"text\" name=\"nombre\" onChange={handleInputChange} value={formData.nombre} placeholder=\"Nombre\" />\n        <input type=\"text\" name=\"apellido\" onChange={handleInputChange} value={formData.apellido} placeholder=\"Apellido\" />\n        {/* ... Otros campos de formulario ... */}\n        <div className=\"form-check mt-3\">\n          <input\n            type=\"checkbox\"\n            id=\"terminos\"\n            name=\"terminos\"\n            className=\"form-check-input\"\n            checked={isChecked}\n            onChange={handleCheckboxChange}\n          />\n          <label htmlFor=\"terminos\" className=\"form-check-label\">\n            Acepto los términos y condiciones\n          </label>\n        </div>\n        <button type=\"submit\" disabled={!isFormValid}>\n          Enviar\n        </button>\n      </form>\n    </div>\n  );\n};\n\n\n\n\n\n\n\nexport default Contact;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}